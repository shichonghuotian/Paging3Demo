name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ${{ github.workspace}}/app/build/outputs/apk/release/app-release-unsigned.apk
    
    - name: Upload files to a GitHub release
  # You may pin to the exact commit or the version.
  # uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
      uses: svenstaro/upload-release-action@2.2.1
      with:
        # GitHub token.
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Local file to upload.
        file: ${{ github.workspace}}/app/build/outputs/apk/release/app-release-unsigned.apk
        # Tag to use as a release.
        tag: ${{ github.ref }} 
        # Name of the asset. When not provided will use the file name. Unused if file_glob is set to "true".
        asset_name: release-1234
        # Overwrite the release in case it already exists.
        overwrite: true
        # If true the file can be a glob pattern, asset_name is ignored if this is true.
        file_glob: true
        # Mark the release as a pre-release. Defaults to "false".
        prerelease: false
        # Explicitly set a release name. Defaults to empty which will cause the release to take the tag as name on GitHub.
        release_name: release-12345
        # Content of the release text. Empty by default.
        body: test release body
        # Specify the name of the GitHub repository in which the GitHub release will be created, edited, and deleted. If the repository is other than the current, it is required to create a personal access token with `repo`, `user`, `admin:repo_hook` scopes to the foreign repository and add it as a secret. Defaults to the current repository
#         repo_name: # optional

      
      
      
